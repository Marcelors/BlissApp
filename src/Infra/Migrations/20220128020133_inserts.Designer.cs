// <auto-generated />
using System;
using Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infra.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220128020133_inserts")]
    partial class inserts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Choices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Choice")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("Votes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Choices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Choice = "C#",
                            QuestionId = 1,
                            Votes = 10
                        },
                        new
                        {
                            Id = 2,
                            Choice = "C++",
                            QuestionId = 1,
                            Votes = 15
                        },
                        new
                        {
                            Id = 3,
                            Choice = "C#",
                            QuestionId = 2,
                            Votes = 10
                        },
                        new
                        {
                            Id = 4,
                            Choice = "C++",
                            QuestionId = 2,
                            Votes = 15
                        },
                        new
                        {
                            Id = 5,
                            Choice = "C#",
                            QuestionId = 3,
                            Votes = 10
                        },
                        new
                        {
                            Id = 6,
                            Choice = "C++",
                            QuestionId = 3,
                            Votes = 15
                        },
                        new
                        {
                            Id = 7,
                            Choice = "C#",
                            QuestionId = 4,
                            Votes = 10
                        },
                        new
                        {
                            Id = 8,
                            Choice = "C++",
                            QuestionId = 4,
                            Votes = 15
                        },
                        new
                        {
                            Id = 9,
                            Choice = "C#",
                            QuestionId = 5,
                            Votes = 10
                        },
                        new
                        {
                            Id = 10,
                            Choice = "C++",
                            QuestionId = 5,
                            Votes = 15
                        },
                        new
                        {
                            Id = 11,
                            Choice = "C#",
                            QuestionId = 6,
                            Votes = 10
                        },
                        new
                        {
                            Id = 12,
                            Choice = "C++",
                            QuestionId = 6,
                            Votes = 15
                        },
                        new
                        {
                            Id = 13,
                            Choice = "C#",
                            QuestionId = 7,
                            Votes = 10
                        },
                        new
                        {
                            Id = 14,
                            Choice = "C++",
                            QuestionId = 7,
                            Votes = 15
                        },
                        new
                        {
                            Id = 15,
                            Choice = "C#",
                            QuestionId = 8,
                            Votes = 10
                        },
                        new
                        {
                            Id = 16,
                            Choice = "C++",
                            QuestionId = 8,
                            Votes = 15
                        },
                        new
                        {
                            Id = 17,
                            Choice = "C#",
                            QuestionId = 9,
                            Votes = 10
                        },
                        new
                        {
                            Id = 18,
                            Choice = "C++",
                            QuestionId = 9,
                            Votes = 15
                        },
                        new
                        {
                            Id = 19,
                            Choice = "C#",
                            QuestionId = 10,
                            Votes = 10
                        },
                        new
                        {
                            Id = 20,
                            Choice = "C++",
                            QuestionId = 10,
                            Votes = 15
                        },
                        new
                        {
                            Id = 21,
                            Choice = "C#",
                            QuestionId = 11,
                            Votes = 10
                        },
                        new
                        {
                            Id = 22,
                            Choice = "C++",
                            QuestionId = 11,
                            Votes = 15
                        },
                        new
                        {
                            Id = 23,
                            Choice = "C#",
                            QuestionId = 12,
                            Votes = 10
                        },
                        new
                        {
                            Id = 24,
                            Choice = "C++",
                            QuestionId = 12,
                            Votes = 15
                        });
                });

            modelBuilder.Entity("Domain.Entities.Questions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ThumbUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://dummyimage.com/600x400/000/fff.png&text=question+1+image+(600x400)",
                            PublishedAt = new DateTime(2022, 1, 28, 2, 1, 32, 939, DateTimeKind.Utc).AddTicks(5410),
                            Question = "Favourite programming language?",
                            ThumbUrl = "https://dummyimage.com/120x120/000/fff.png&text=question+1+image+(120x120)"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://dummyimage.com/600x400/000/fff.png&text=question+1+image+(600x400)",
                            PublishedAt = new DateTime(2022, 1, 28, 2, 1, 32, 939, DateTimeKind.Utc).AddTicks(7090),
                            Question = "Favourite programming language?",
                            ThumbUrl = "https://dummyimage.com/120x120/000/fff.png&text=question+1+image+(120x120)"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://dummyimage.com/600x400/000/fff.png&text=question+1+image+(600x400)",
                            PublishedAt = new DateTime(2022, 1, 28, 2, 1, 32, 939, DateTimeKind.Utc).AddTicks(7100),
                            Question = "Favourite programming language?",
                            ThumbUrl = "https://dummyimage.com/120x120/000/fff.png&text=question+1+image+(120x120)"
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "https://dummyimage.com/600x400/000/fff.png&text=question+1+image+(600x400)",
                            PublishedAt = new DateTime(2022, 1, 28, 2, 1, 32, 939, DateTimeKind.Utc).AddTicks(7100),
                            Question = "Favourite programming language?",
                            ThumbUrl = "https://dummyimage.com/120x120/000/fff.png&text=question+1+image+(120x120)"
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "https://dummyimage.com/600x400/000/fff.png&text=question+1+image+(600x400)",
                            PublishedAt = new DateTime(2022, 1, 28, 2, 1, 32, 939, DateTimeKind.Utc).AddTicks(7100),
                            Question = "Favourite programming language?",
                            ThumbUrl = "https://dummyimage.com/120x120/000/fff.png&text=question+1+image+(120x120)"
                        },
                        new
                        {
                            Id = 6,
                            ImageUrl = "https://dummyimage.com/600x400/000/fff.png&text=question+1+image+(600x400)",
                            PublishedAt = new DateTime(2022, 1, 28, 2, 1, 32, 939, DateTimeKind.Utc).AddTicks(7110),
                            Question = "Favourite programming language?",
                            ThumbUrl = "https://dummyimage.com/120x120/000/fff.png&text=question+1+image+(120x120)"
                        },
                        new
                        {
                            Id = 7,
                            ImageUrl = "https://dummyimage.com/600x400/000/fff.png&text=question+1+image+(600x400)",
                            PublishedAt = new DateTime(2022, 1, 28, 2, 1, 32, 939, DateTimeKind.Utc).AddTicks(7110),
                            Question = "Favourite programming language?",
                            ThumbUrl = "https://dummyimage.com/120x120/000/fff.png&text=question+1+image+(120x120)"
                        },
                        new
                        {
                            Id = 8,
                            ImageUrl = "https://dummyimage.com/600x400/000/fff.png&text=question+1+image+(600x400)",
                            PublishedAt = new DateTime(2022, 1, 28, 2, 1, 32, 939, DateTimeKind.Utc).AddTicks(7110),
                            Question = "Favourite programming language?",
                            ThumbUrl = "https://dummyimage.com/120x120/000/fff.png&text=question+1+image+(120x120)"
                        },
                        new
                        {
                            Id = 9,
                            ImageUrl = "https://dummyimage.com/600x400/000/fff.png&text=question+1+image+(600x400)",
                            PublishedAt = new DateTime(2022, 1, 28, 2, 1, 32, 939, DateTimeKind.Utc).AddTicks(7110),
                            Question = "Favourite programming language?",
                            ThumbUrl = "https://dummyimage.com/120x120/000/fff.png&text=question+1+image+(120x120)"
                        },
                        new
                        {
                            Id = 10,
                            ImageUrl = "https://dummyimage.com/600x400/000/fff.png&text=question+1+image+(600x400)",
                            PublishedAt = new DateTime(2022, 1, 28, 2, 1, 32, 939, DateTimeKind.Utc).AddTicks(7110),
                            Question = "Favourite programming language?",
                            ThumbUrl = "https://dummyimage.com/120x120/000/fff.png&text=question+1+image+(120x120)"
                        },
                        new
                        {
                            Id = 11,
                            ImageUrl = "https://dummyimage.com/600x400/000/fff.png&text=question+1+image+(600x400)",
                            PublishedAt = new DateTime(2022, 1, 28, 2, 1, 32, 939, DateTimeKind.Utc).AddTicks(7120),
                            Question = "Favourite programming language?",
                            ThumbUrl = "https://dummyimage.com/120x120/000/fff.png&text=question+1+image+(120x120)"
                        },
                        new
                        {
                            Id = 12,
                            ImageUrl = "https://dummyimage.com/600x400/000/fff.png&text=question+1+image+(600x400)",
                            PublishedAt = new DateTime(2022, 1, 28, 2, 1, 32, 939, DateTimeKind.Utc).AddTicks(7120),
                            Question = "Favourite programming language?",
                            ThumbUrl = "https://dummyimage.com/120x120/000/fff.png&text=question+1+image+(120x120)"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Choices", b =>
                {
                    b.HasOne("Domain.Entities.Questions", "Question")
                        .WithMany("Choices")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Domain.Entities.Questions", b =>
                {
                    b.Navigation("Choices");
                });
#pragma warning restore 612, 618
        }
    }
}
